import{_ as a,c as i,o as e,aj as t}from"./chunks/framework.218xjblo.js";const c=JSON.parse('{"title":"@data 변수","description":"","frontmatter":{},"headers":[],"relativePath":"ko/api-reference/data-variables.md","filePath":"ko/api-reference/data-variables.md","lastUpdated":1717630644000}'),h={name:"ko/api-reference/data-variables.md"};function l(n,s,p,k,d,r){return e(),i("div",null,[...s[0]||(s[0]=[t('<h1 id="data-변수" tabindex="-1"><code>@data</code> 변수 <a class="header-anchor" href="#data-변수" aria-label="Permalink to &quot;`@data` 변수&quot;">​</a></h1><p>다음 <code>@data</code> 변수들은 Handlebars와 내장 헬퍼에 의해 구현됩니다.</p><h2 id="root" tabindex="-1"><code>@root</code> <a class="header-anchor" href="#root" aria-label="Permalink to &quot;`@root`&quot;">​</a></h2><p>템플릿이 실행된 초기 컨텍스트입니다.</p><div class="language-handlebars vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">handlebars</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#each</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> array</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {{</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">@root.foo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/each</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span></span></code></pre></div><p>명시적으로 수정되지 않는 한, 이 값은 페이지 렌더링의 모든 부분에서 일관되게 유지되므로, 깊은 매개변수가 상위 템플릿을 참 조할 수 없는 부분 템플릿 내에서도 사용할 수 있습니다.</p><h2 id="first" tabindex="-1"><code>@first</code> <a class="header-anchor" href="#first" aria-label="Permalink to &quot;`@first`&quot;">​</a></h2><p>반복의 첫 번째 단계에서 <code>each</code> 헬퍼에 의해 true로 설정됩니다.</p><div class="language-handlebars vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">handlebars</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#each</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> array</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#if</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> @first</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> First! </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/each</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span></span></code></pre></div><h2 id="index" tabindex="-1"><code>@index</code> <a class="header-anchor" href="#index" aria-label="Permalink to &quot;`@index`&quot;">​</a></h2><p>현재 반복 단계의 0부터 시작하는 인덱스입니다. <code>each</code> 헬퍼에 의해 설정됩니다.</p><div class="language-handlebars vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">handlebars</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#each</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> array</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {{</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">@index</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/each</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span></span></code></pre></div><h2 id="key" tabindex="-1"><code>@key</code> <a class="header-anchor" href="#key" aria-label="Permalink to &quot;`@key`&quot;">​</a></h2><p>현재 반복 단계의 키 이름입니다. 객체를 반복할 때 <code>each</code> 헬퍼에 의해 설정됩니다.</p><div class="language-handlebars vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">handlebars</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#each</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> array</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {{</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">@key</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/each</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span></span></code></pre></div><h2 id="last" tabindex="-1"><code>@last</code> <a class="header-anchor" href="#last" aria-label="Permalink to &quot;`@last`&quot;">​</a></h2><p>반복의 마지막 단계에서 <code>each</code> 헬퍼에 의해 true로 설정됩니다.</p><div class="language-handlebars vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">handlebars</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#each</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> array</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#if</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> @last</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Last :( </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> {{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/each</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}}</span></span></code></pre></div><h2 id="level" tabindex="-1"><code>@level</code> <a class="header-anchor" href="#level" aria-label="Permalink to &quot;`@level`&quot;">​</a></h2><p>로그 레벨을 할당합니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({}, { data: { level: Handlebars.logger.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WARN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } });</span></span></code></pre></div><p><code>Handlebars.logger.DEBUG</code>，<code>Handlebars.logger.INFO</code>，<code>Handlebars.logger.WARN</code> 또는 <code>Handlebars.logger.ERROR</code> 중 하나로설 정할 수 있습니다.</p><p>설정하게 되면, 로거는 출력에 <code>Handlebars.logger.level</code> 이상의 로그 레벨을 가진 메시지만 포함합니다. 기본 값은 <code>Handlebars.logger.ERROR</code>입니다.</p>',23)])])}const g=a(h,[["render",l]]);export{c as __pageData,g as default};
