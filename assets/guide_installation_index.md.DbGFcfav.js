import{D as e}from"./chunks/DownloadHandlebars.3urfGisr.js";import{d as h}from"./chunks/theme.BCtLxCZ3.js";import{c as r,o as p,aj as t,j as a,G as n,a as i,t as o,k as d,w as l}from"./chunks/framework.BFa_AUiY.js";const k={id:"latest-release-version-handlebars-versions-latest",tabindex:"-1"},y=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[],"relativePath":"guide/installation/index.md","filePath":"guide/installation/index.md","lastUpdated":1695492225000}'),g={name:"guide/installation/index.md"},F=Object.assign(g,{setup(c){return(E,s)=>(p(),r("div",null,[s[3]||(s[3]=t(`<h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h1><p>There are a variety of ways to install Handlebars, depending on the programming language and environment you are using.</p><h2 id="npm-or-yarn-recommended" tabindex="-1">npm or yarn (recommended) <a class="header-anchor" href="#npm-or-yarn-recommended" aria-label="Permalink to &quot;npm or yarn (recommended)&quot;">​</a></h2><p>The reference implementation of Handlebars is written in JavaScript. It is most commonly installed using <code>npm</code> or <code>yarn</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> handlebars</span></span></code></pre></div><p>or</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> handlebars</span></span></code></pre></div><p>You can then use Handlebars by importing it:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;handlebars&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> template</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Name: {{name}}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Nils&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }));</span></span></code></pre></div><p>If you are using Handlebars in a CommonJS environment, you can use <code>require</code>:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Handlebars</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;handlebars&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> template</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Name: {{name}}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Nils&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }));</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Using npm or yarn is the recommended way of using Handlebars. If you want to use Handlebars templates in the web-browser, we recommend that you use a build-engine such as Webpack, Browserify or Parcel.</p><p>The <a href="./integrations.html">integrations</a> page contains a list of plugins for those loaders that allow you to automatically precompile templates or use Handlebars otherwise.</p><p><a href="./integrations.html">Learn more: Integrations</a></p></div><h3 id="browser-builds-in-the-npm-package" tabindex="-1">Browser builds in the npm-package <a class="header-anchor" href="#browser-builds-in-the-npm-package" aria-label="Permalink to &quot;Browser builds in the npm-package&quot;">​</a></h3><p>The browser builds are located in the <code>node_modules/handlebars/dist/</code> directory. Making these accessible to the browser will depend on what build system you are using but this may be as simple as copying the files to an accessible place.</p><p>This is the preferred method of installation when using the precompiler as it ensures that your precompiled templates always run against the same version of the runtime.</p><h2 id="downloading-handlebars" tabindex="-1">Downloading Handlebars <a class="header-anchor" href="#downloading-handlebars" aria-label="Permalink to &quot;Downloading Handlebars&quot;">​</a></h2><p>The following downloads are provided as a convenience to the community. They are not meant for production use, but they can give you a quick-start without having to set up a build-engine.</p>`,17)),a("h3",k,[i("Latest release (version "+o(d(h).versions.latest)+") ",1),s[0]||(s[0]=a("a",{class:"header-anchor",href:"#latest-release-version-handlebars-versions-latest","aria-label":'Permalink to "Latest release (version {{ handlebars.versions.latest }})"'},"​",-1))]),n(e,null,{default:l(()=>s[1]||(s[1]=[a("p",null,"Use this version as a quick start, if you want to compile your templates in the browser.",-1)])),_:1}),n(e,{runtimeOnly:!0},{default:l(()=>s[2]||(s[2]=[a("p",null,[i("Use this version when you are using "),a("a",{href:"./precompilation.html"},"precompiled templates"),i(" in the browser. This version does not include the compiler.")],-1)])),_:1}),s[4]||(s[4]=t(`<h3 id="non-release-builds" tabindex="-1">Non-release builds <a class="header-anchor" href="#non-release-builds" aria-label="Permalink to &quot;Non-release builds&quot;">​</a></h3><p>All of Handlebars&#39; released versions and CI builds are available for download on S3 in our <a href="https://s3.amazonaws.com/builds.handlebarsjs.com/index.html" target="_blank" rel="noreferrer">builds page</a>.</p><p>The latest passing master build is named <code>handlebars-latest.js</code> and each passing SHA on master will create a <code>handlebars-gitSHA.js</code> file. While these all pass the CI, it&#39;s preferable to use one of the tagged releases.</p><p><strong>Note</strong>: The builds page is provided as a convenience for the community, but you should not use it for hosting Handlebars in production.</p><h2 id="cdns" tabindex="-1">CDNs <a class="header-anchor" href="#cdns" aria-label="Permalink to &quot;CDNs&quot;">​</a></h2><p>Handlebars is hosted on a number of free CDNs as well.</p><ul><li><a href="https://cdnjs.com/libraries/handlebars.js" target="_blank" rel="noreferrer">cdnjs</a></li><li><a href="http://www.jsdelivr.com/#!handlebarsjs" target="_blank" rel="noreferrer">jsDelivr</a>. Advanced usage, such as <a href="https://github.com/jsdelivr/jsdelivr#usage" target="_blank" rel="noreferrer">version aliasing &amp; concocting</a>, is available.</li></ul><h2 id="rubygems" tabindex="-1">RubyGems <a class="header-anchor" href="#rubygems" aria-label="Permalink to &quot;RubyGems&quot;">​</a></h2><p>The official Handlebars build is available on <a href="https://rubygems.org/gems/handlebars-source" target="_blank" rel="noreferrer">https://rubygems.org/gems/handlebars-source</a>.</p><h2 id="bower-component-composer-jspm" tabindex="-1">Bower, Component, Composer, jspm <a class="header-anchor" href="#bower-component-composer-jspm" aria-label="Permalink to &quot;Bower, Component, Composer, jspm&quot;">​</a></h2><p>Handlebars can be enabled by using other package-managers as well, like</p><ul><li>Bower (deprecated)</li><li>Component</li><li>Composer</li><li>jspm</li></ul><p>See <a href="https://github.com/components/handlebars.js" target="_blank" rel="noreferrer">https://github.com/components/handlebars.js</a> for details.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>You can deliver a template to the browser by including it in a <code>&lt;script&gt;</code> tag.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;entry-template&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/x-handlebars-template&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;entry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{title}}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {{body}}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Always use a script-tag for your template</p><p>If you use this method, you have to wrap your template with a script-tag. Otherwise the browser may remove or modify parts of your template if you don&#39;t. Have a look at <a href="https://html.spec.whatwg.org/multipage/parsing.html#unexpected-markup-in-tables" target="_blank" rel="noreferrer">&quot;Unexpected markup in tables&quot;</a> for an example.</p></div><p>Compile a template in JavaScript by using Handlebars.compile</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;entry-template&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).innerHTML;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> template </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(source);</span></span></code></pre></div><p>Get the HTML result of evaluating a Handlebars template by executing the template with a context.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My New Post&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, body: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is my first post!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> html </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context);</span></span></code></pre></div><p>results in</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;entry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;My New Post&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;This is my first post!&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="precompiling-templates" tabindex="-1">Precompiling Templates <a class="header-anchor" href="#precompiling-templates" aria-label="Permalink to &quot;Precompiling Templates&quot;">​</a></h3><p>In the previous example, we have loaded the compiler-and-runtime version of Handlebars. It is much more efficient, to compile your templates beforehand and include the precompiled version in your website. You can include the smaller runtime and the browser does not have to compile the templates before running them.</p><p><a href="./precompilation.html">Learn More: Precompilation</a></p><h2 id="bower-deprecated" tabindex="-1">Bower (deprecated) <a class="header-anchor" href="#bower-deprecated" aria-label="Permalink to &quot;Bower (deprecated)&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><a href="https://bower.io/blog/2017/how-to-migrate-away-from-bower/" target="_blank" rel="noreferrer">Bower is deprecated</a></p><p>Bower versions of Handlebars are still published (at the moment) for backwards compatibility. But if you are setting up a new project, you should not use it anymore.</p></div><h2 id="other-programming-languages" tabindex="-1">Other programming languages <a class="header-anchor" href="#other-programming-languages" aria-label="Permalink to &quot;Other programming languages&quot;">​</a></h2><p>There are Handlebars implementations for many programming languages.</p><ul><li><a href="https://github.com/Handlebars-Net/Handlebars.Net" target="_blank" rel="noreferrer">.Net</a></li><li><a href="https://github.com/jbboehr/handlebars.c" target="_blank" rel="noreferrer">C</a></li><li><a href="https://github.com/aymerick/raymond" target="_blank" rel="noreferrer">Go</a></li><li><a href="https://github.com/jknack/handlebars.java" target="_blank" rel="noreferrer">Java</a></li><li><a href="https://github.com/zordius/lightncandy" target="_blank" rel="noreferrer">PHP (LightnCandy)</a></li><li><a href="https://github.com/wbond/pybars3" target="_blank" rel="noreferrer">Python</a></li><li><a href="https://github.com/cowboyd/handlebars.rb" target="_blank" rel="noreferrer">Ruby</a></li><li><a href="https://github.com/sunng87/handlebars-rust" target="_blank" rel="noreferrer">Rust</a></li></ul>`,31))]))}});export{y as __pageData,F as default};
