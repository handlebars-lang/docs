import{_ as s,c as i,o as e,aj as t}from"./chunks/framework.218xjblo.js";const c=JSON.parse('{"title":"Handlebars 运行时","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api-reference/runtime.md","filePath":"zh/api-reference/runtime.md","lastUpdated":1695492225000}'),n={name:"zh/api-reference/runtime.md"};function l(r,a,h,p,d,k){return e(),i("div",null,[...a[0]||(a[0]=[t('<h1 id="handlebars-运行时" tabindex="-1">Handlebars 运行时 <a class="header-anchor" href="#handlebars-运行时" aria-label="Permalink to &quot;Handlebars 运行时&quot;">​</a></h1><h2 id="handlebars-registerpartial-name-partial" tabindex="-1"><code>Handlebars.registerPartial(name, partial)</code> <a class="header-anchor" href="#handlebars-registerpartial-name-partial" aria-label="Permalink to &quot;`Handlebars.registerPartial(name, partial)`&quot;">​</a></h2><p>注册可以被当前环境内任意模版访问的代码片段。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerPartial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, partial);</span></span></code></pre></div><p>同时支持一次性注册多个代码片段。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerPartial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ foo: partial, bar: partial });</span></span></code></pre></div><p>如果导入整个库，代码片段的值可能是按需编译的字符串。如果只是在运行时导入，代码片段必须为通过 <code>Handlebars.template</code> 预编译过的模版。</p><h2 id="handlebars-unregisterpartial-name" tabindex="-1"><code>Handlebars.unregisterPartial(name)</code> <a class="header-anchor" href="#handlebars-unregisterpartial-name" aria-label="Permalink to &quot;`Handlebars.unregisterPartial(name)`&quot;">​</a></h2><p>注销之前注册过的代码片段。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregisterPartial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="handlebars-registerhelper-name-helper" tabindex="-1"><code>Handlebars.registerHelper(name, helper)</code> <a class="header-anchor" href="#handlebars-registerhelper-name-helper" aria-label="Permalink to &quot;`Handlebars.registerHelper(name, helper)`&quot;">​</a></h2><p>注册可以被当前环境中任意模版访问的助手代码。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerHelper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {});</span></span></code></pre></div><p>支持同时注册多个助手代码。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerHelper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {}, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {} });</span></span></code></pre></div><h2 id="handlebars-unregisterhelper-name" tabindex="-1"><code>Handlebars.unregisterHelper(name)</code> <a class="header-anchor" href="#handlebars-unregisterhelper-name" aria-label="Permalink to &quot;`Handlebars.unregisterHelper(name)`&quot;">​</a></h2><p>注销之前的注册的助手代码。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregisterHelper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="handlebars-registerdecorator-name-helper-deprecated" tabindex="-1"><code>Handlebars.registerDecorator(name, helper)</code> (deprecated) <a class="header-anchor" href="#handlebars-registerdecorator-name-helper-deprecated" aria-label="Permalink to &quot;`Handlebars.registerDecorator(name, helper)` (deprecated)&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">弃用警告</p><p>自定义装饰器已经被废弃，并且可能会在 Handlebars 的下个主要版本消失。自定义装饰器关联了非常多的内部 API，而这会对导入其他语言造成不便，并且代码也变得难以维护。</p></div><p>注册一个可以被环境内任意模版访问的装饰器。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerDecorator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {});</span></span></code></pre></div><p>支持同时注册多个装饰器。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerDecorator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {}, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {} });</span></span></code></pre></div><h2 id="handlebars-unregisterdecorator-name" tabindex="-1"><code>Handlebars.unregisterDecorator(name)</code> <a class="header-anchor" href="#handlebars-unregisterdecorator-name" aria-label="Permalink to &quot;`Handlebars.unregisterDecorator(name)`&quot;">​</a></h2><p>注销一个之前注册的装饰器。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregisterDecorator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="handlebars-create" tabindex="-1"><code>Handlebars.create()</code> <a class="header-anchor" href="#handlebars-create" aria-label="Permalink to &quot;`Handlebars.create()`&quot;">​</a></h2><p>创建一个独立的 Handlebars 环境。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OtherHandlebars </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>每个环境都有它独立的助手代码和代码片段。本函数只在需要独立的助手代码或代码片段时有用。通常来说，<code>Handlebars</code> 环境已经足够。</p><p>在当前环境中创建的模版属于当前环境。这意味着如果想要在多个环境中运行当前模版，必须用 <code>Handlebars.template</code> 对每个环境重新编译或重新构造。以上描述对于代码片段也是一样的。</p><h2 id="handlebars-noconflict" tabindex="-1"><code>Handlebars.noConflict()</code> <a class="header-anchor" href="#handlebars-noconflict" aria-label="Permalink to &quot;`Handlebars.noConflict()`&quot;">​</a></h2><p>从全局命名域中删除当前的 Handlebars 实例，重置全局 <code>Handlebars</code> 变量。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myHandlebars </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">noConflict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>允许在无视版本冲突的情况下同时应用独立版本的库。</p>',36)])])}const g=s(n,[["render",l]]);export{c as __pageData,g as default};
