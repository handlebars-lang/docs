import{_ as p,C as s,c as r,o as d,aj as i,G as a,j as l,a as o,w as c}from"./chunks/framework.BFa_AUiY.js";const _=JSON.parse('{"title":"Creating interactive examples","description":"","frontmatter":{},"headers":[],"relativePath":"contributing/interactive-examples.md","filePath":"contributing/interactive-examples.md","lastUpdated":1695492225000}'),h={name:"contributing/interactive-examples.md"};function m(u,e,x,g,f,b){const t=s("Example"),n=s("Flex");return d(),r("div",null,[e[0]||(e[0]=i('<h1 id="creating-interactive-examples" tabindex="-1">Creating interactive examples <a class="header-anchor" href="#creating-interactive-examples" aria-label="Permalink to &quot;Creating interactive examples&quot;">​</a></h1><p>It is possible to define interactive examples. Examples or parts of an example can be <strong>embedded in any page</strong>. A auto-generated link enables the visitor to open the example in a <strong>playground</strong> where she can change the template, partials, input, and so on and can see the resulting output.</p><h2 id="creating-examples" tabindex="-1">Creating examples <a class="header-anchor" href="#creating-examples" aria-label="Permalink to &quot;Creating examples&quot;">​</a></h2><p>In order to define an example, create a new markdown file in the <code>examples</code>-directory. The example data is defined in the frontmatter of the referenced example page. See <a href="./../examples/all-features.html">all-features-example-raw</a> for a complete demonstration of all features.</p><p>The following frontmatter properties are supported:</p><ul><li><code>layout</code>: Must always be <code>InteractivePlaygroundLayout</code></li><li><code>example</code>: Contains the example <ul><li><code>template</code>: The main Handlebars template</li><li><code>partials</code>: An object with on property for each registered partial, the key is the partial-name, the value is the partial content</li><li><code>preparationScript</code>: A script that is executed before compiling and running the template. <code>Handlebars</code> is available as global variable in this script.</li><li><code>input</code>: The template-input as embedded YAML-object.</li><li><code>errorExpected</code>: A boolean (default: <code>false</code>) that specifies that this example is expected to throw an error. By default, examples that throw an error during execution, cause the build of the whole site to fail. If you write an example that describes an error, you need to set this flag to <code>true</code>.</li></ul></li></ul><p>The output of the example is automatically computed using the latest release version of Handlebars.</p><h2 id="example-data" tabindex="-1">Example data <a class="header-anchor" href="#example-data" aria-label="Permalink to &quot;Example data&quot;">​</a></h2><p>If possible, examples should use variations of a common data set. Therefore, the file <a href="https://github.com/handlebars-lang/docs/blob/master/src/_examples/_example-base-data.yaml" target="_blank" rel="noreferrer">src/_examples/_example-base-data.yaml</a> contains data that can be reused and adapted to each example. If the data in that file is insufficient, please add new data, but please make sure it is somehow related.</p><h2 id="embedding-parts-of-an-example" tabindex="-1">Embedding parts of an example. <a class="header-anchor" href="#embedding-parts-of-an-example" aria-label="Permalink to &quot;Embedding parts of an example.&quot;">​</a></h2><p>The <code>&lt;ExamplePart&gt;</code>-component allows you to show a part of the example in the current part.</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;Example examplePage=&quot;/examples/builtin-helper-each-block&quot; show=&quot;template&quot;/&gt;</span></span></code></pre></div><p>will result in</p>',13)),a(t,{examplePage:"/examples/builtin-helper-each-block",show:"template"}),e[1]||(e[1]=i("<p>The props for this component are:</p><ul><li><code>examplePage</code>: path to the example page below the <code>src</code>-folder</li><li><code>show</code>: The part of the example that should be inserted into the page. Possible values are <code>template</code>, <code>input</code>, <code>output</code>, <code>error</code>, <code>preparationScript</code> and <code>partial</code></li><li><code>name</code> (optional): This prop is needed only when <code>show=&quot;partial&quot;</code>. It defines the name of the partial that should be inserted into the example.</li></ul><p>The component is very useful if you want to embed the parts of an example into flowing text, You can insert the input JSON by using <code>&lt;Example examplePage=&quot;/examples/all-features&quot; show=&quot;input&quot; /&gt;</code> and the following code snippet will appear in the page:</p>",3)),a(t,{examplePage:"/examples/all-features",show:"input"}),e[2]||(e[2]=l("p",null,[o("Then, in order to show the reader the template you can use "),l("code",null,'show="template"'),o(" with the same "),l("code",null,"examplePage"),o(".")],-1)),a(t,{examplePage:"/examples/all-features",show:"template"}),e[3]||(e[3]=l("p",null,[o("You can render a partial using for example "),l("code",null,"show=partial"),o(" and "),l("code",null,"name=person")],-1)),a(t,{examplePage:"/examples/all-features",show:"partial",name:"person"}),e[4]||(e[4]=l("p",null,"If you have an example with helpers, you might also want to include the preparation script:",-1)),a(t,{examplePage:"/examples/all-features",show:"preparationScript"}),e[5]||(e[5]=i(`<h2 id="horizontal-layout" tabindex="-1">Horizontal layout <a class="header-anchor" href="#horizontal-layout" aria-label="Permalink to &quot;Horizontal layout&quot;">​</a></h2><p>If you want to layout two example-parts horizontally, you can use the <code>&lt;Flex&gt;</code>-component.</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;Flex&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;Example examplePage=&quot;/examples/builtin-helper-each-block&quot; show=&quot;template&quot;/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;Example examplePage=&quot;/examples/builtin-helper-each-block&quot; show=&quot;input&quot;/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/Flex&gt;</span></span></code></pre></div><p>becomes</p>`,4)),a(n,null,{default:c(()=>[a(t,{examplePage:"/examples/builtin-helper-each-block",show:"template"}),a(t,{examplePage:"/examples/builtin-helper-each-block",show:"input"})]),_:1})])}const y=p(h,[["render",m]]);export{_ as __pageData,y as default};
