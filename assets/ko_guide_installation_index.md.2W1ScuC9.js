import{D as t}from"./chunks/DownloadHandlebars.3urfGisr.js";import{d as h}from"./chunks/theme.BCtLxCZ3.js";import{c as p,o as r,aj as e,j as a,G as n,a as i,t as k,k as d,w as l}from"./chunks/framework.BFa_AUiY.js";const o={id:"최신-릴리즈-version-handlebars-versions-latest",tabindex:"-1"},m=JSON.parse('{"title":"설치","description":"","frontmatter":{},"headers":[],"relativePath":"ko/guide/installation/index.md","filePath":"ko/guide/installation/index.md","lastUpdated":1695492225000}'),E={name:"ko/guide/installation/index.md"},F=Object.assign(E,{setup(g){return(c,s)=>(r(),p("div",null,[s[3]||(s[3]=e(`<h1 id="설치" tabindex="-1">설치 <a class="header-anchor" href="#설치" aria-label="Permalink to &quot;설치&quot;">​</a></h1><p>프로그래밍 언어와 환경에 따라 Handlebars를 설치하는 방법이 다양합니다.</p><h2 id="npm-또는-yarn-권장" tabindex="-1">npm 또는 yarn (권장) <a class="header-anchor" href="#npm-또는-yarn-권장" aria-label="Permalink to &quot;npm 또는 yarn (권장)&quot;">​</a></h2><p>Handlebars의 참조 구현은 JavaScript로 작성되어 있습니다. 일반적으로 npm이나 yarn을 사용하여 설치됩니다.：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> handlebars</span></span></code></pre></div><p>或者</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> handlebars</span></span></code></pre></div><p>아래처럼 Handlebars를 import하여 사용할 수 있습니다.:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;handlebars&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> template</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Name: {{name}}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Nils&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }));</span></span></code></pre></div><p>CommonJS 환경에서 Handlebars를 사용하는 경우 require를 사용할 수 있습니다.：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Handlebars</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;handlebars&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> template</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Name: {{name}}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Nils&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }));</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>npm이나 yarn을 이용해 Handlebars를 사용하는 것을 권장합니다. 웹 브라우저에서 Handlebars 템플릿을 사용하려면 Webpack, Browserify 또는 Parcel과 같은 빌드 엔진을 사용하는 것이 좋습니다.</p><p><a href="./integrations.html">integrations</a> 페이지에는 템플릿을 자동으로 사전 컴파일하거나 다른 방식으로 Handlebars를 사용할 수 있도 록하는 로더들의 플러그인 목록이 포함되어 있습니다.</p><p><a href="./integrations.html">더 알아보기: 통합</a></p></div><h3 id="npm-패키지의-브라우저-빌드" tabindex="-1">npm 패키지의 브라우저 빌드 <a class="header-anchor" href="#npm-패키지의-브라우저-빌드" aria-label="Permalink to &quot;npm 패키지의 브라우저 빌드&quot;">​</a></h3><p>브라우저 빌드는 <code>node_modules/handlebars/dist/</code> 디렉토리에 있습니다. 브라우저에서 이를 사용할 수 있도록 만들려면 사용 중 인빌드 시스템에 따라 다르지만, 파일을 접근 가능한 위치로 복사하는 것으로 간단히 처리할 수 있습니다.</p><p>사전 컴파일러를 사용할 때 이 방법을 사용하는 것이 권장됩니다. 이는 사전 컴파일된 템플릿이 항상 런타임의 동일한 버전에 대 해실행되도록 보장합니다.</p><h2 id="handlebars-다운로드" tabindex="-1">Handlebars 다운로드 <a class="header-anchor" href="#handlebars-다운로드" aria-label="Permalink to &quot;Handlebars 다운로드&quot;">​</a></h2><p>다음 다운로드는 커뮤니티를 위한 편의로 제공됩니다. production 목적으로는 부합하지 않으나, 빌드 엔진을 설정하지 않고도 빠 르게시작할 수 있습니다.</p>`,17)),a("h3",o,[i("최신 릴리즈 （version "+k(d(h).versions.latest)+"） ",1),s[0]||(s[0]=a("a",{class:"header-anchor",href:"#최신-릴리즈-version-handlebars-versions-latest","aria-label":'Permalink to "최신 릴리즈 （version {{ handlebars.versions.latest }}）"'},"​",-1))]),n(t,null,{default:l(()=>s[1]||(s[1]=[a("p",null,"브라우저에서 빠르게 시작해보기 위해서, 이 버전을 quick start로 사용할 수 있습니다.",-1)])),_:1}),n(t,{runtimeOnly:!0},{default:l(()=>s[2]||(s[2]=[a("p",null,[i("이 버전은 브라우저에서 "),a("a",{href:"./precompilation.html"},"사전 컴파일된 템플릿"),i("을 사용할 때 사용하세요. 이 버전에는 컴파일러가 포함되어 있지 않습니다.")],-1)])),_:1}),s[4]||(s[4]=e(`<h3 id="릴리즈되지-않은-빌드" tabindex="-1">릴리즈되지 않은 빌드 <a class="header-anchor" href="#릴리즈되지-않은-빌드" aria-label="Permalink to &quot;릴리즈되지 않은 빌드&quot;">​</a></h3><p>Handlebars의 모든 릴리즈된 버전과 CI 빌드는 S3에서 다운로드할 수 있습니다. <a href="https://s3.amazonaws.com/builds.handlebarsjs.com/index.html" target="_blank" rel="noreferrer">build page</a>。</p><p>가장 최근에 통과된 마스터 빌드는 <code>handlebars-latest.js</code>로 명명되며, 마스터 브랜치에서 통과한 SHA는 각각 <code>handlebars-gitSHA.js</code> 파일을 생성합니다. 이들은 모두 CI를 통과하지만, 태그된 릴리즈 중 하나를 사용하는 것이 좋습니다.</p><p><strong>주의</strong>: 빌드 페이지는 커뮤니티를 위한 편의성을 제공하기 위해 제공되었지만, production에서 Handlebars를 호스팅하는 데사 용해서는 안 됩니다.</p><h2 id="cdns" tabindex="-1">CDNs <a class="header-anchor" href="#cdns" aria-label="Permalink to &quot;CDNs&quot;">​</a></h2><p>Handlebars는 여러 무료 CDN에 호스팅되어 있습니다.</p><ul><li><a href="https://cdnjs.com/libraries/handlebars.js" target="_blank" rel="noreferrer">cdnjs</a></li><li><a href="http://www.jsdelivr.com/#!handlebarsjs" target="_blank" rel="noreferrer">jsDelivr</a>。향상된 사용법, 예를 들어   <a href="https://github.com/jsdelivr/jsdelivr#usage" target="_blank" rel="noreferrer">version aliasing &amp; concocting</a>, 이 가능합니다.</li></ul><h2 id="rubygems" tabindex="-1">RubyGems <a class="header-anchor" href="#rubygems" aria-label="Permalink to &quot;RubyGems&quot;">​</a></h2><p>공식 Handlebars 빌드는 <a href="https://rubygems.org/gems/handlebars-source" target="_blank" rel="noreferrer">https://rubygems.org/gems/handlebars-source</a>에서 사용할 수 있습니다.</p><h2 id="bower-component-composer-jspm" tabindex="-1">Bower, Component, Composer, jspm <a class="header-anchor" href="#bower-component-composer-jspm" aria-label="Permalink to &quot;Bower, Component, Composer, jspm&quot;">​</a></h2><p>다른 패키지 관리자를 사용하여 Handlebars를 활성화할 수 있습니다. 예를 들어,</p><ul><li>Bower (사용 중지됨)</li><li>Component</li><li>Composer</li><li>jspm</li></ul><p>자세한 사항은 <a href="https://github.com/components/handlebars.js" target="_blank" rel="noreferrer">https://github.com/components/handlebars.js</a>를 참고하세요.</p><h2 id="사용법" tabindex="-1">사용법 <a class="header-anchor" href="#사용법" aria-label="Permalink to &quot;사용법&quot;">​</a></h2><p>템플릿을 브라우저로 전달하려면 <code>&lt;script&gt;</code> 태그에 포함시킬 수 있습니다.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;entry-template&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/x-handlebars-template&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;entry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {{title}}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {{body}}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">경고: 항상 템플릿에 스크립트 태그를 사용하세요.</p><p>이 방법을 사용하는 경우 템플릿을 <code>&lt;script&gt;</code> 태그로 감싸야 합니다. 그렇지 않으면 브라우저가 템플릿의 일부를 제거하거나 수 정할수 있습니다. 다음을 참조하세요. <a href="https://html.spec.whatwg.org/multipage/parsing.html#unexpected-markup-in-tables" target="_blank" rel="noreferrer">“Unexpected markup in tables”</a>.</p></div><p>Handlebars.compile를 사용하여 JavaScript에서 템플릿을 컴파일하세요.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;entry-template&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).innerHTML;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> template </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(source);</span></span></code></pre></div><p>Handlebars 템플릿을 컨텍스트와 함께 실행하여 HTML을 가져옵니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My New Post&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, body: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is my first post!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> html </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context);</span></span></code></pre></div><p>결과：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;entry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;My New Post&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;This is my first post!&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="템플릿-사전-컴파일하기" tabindex="-1">템플릿 사전 컴파일하기 <a class="header-anchor" href="#템플릿-사전-컴파일하기" aria-label="Permalink to &quot;템플릿 사전 컴파일하기&quot;">​</a></h3><p>이전 예제에서는 Handlebars의 컴파일러 및 런타임 버전을 로드했습니다. 템플릿을 미리 컴파일하고 웹 사이트에 사전 컴파일된 버전을 포함하는 것이 훨씬 효율적입니다. 더 작은 런타임을 포함할 수 있으며 브라우저는 템플릿을 실행하기 전에 컴파일할 필 요가 없습니다.</p><p><a href="./precompilation.html">더 알아보기: 사전 컴파일</a></p><h2 id="bower-사용이-중지되었습니다" tabindex="-1">Bower （사용이 중지되었습니다.） <a class="header-anchor" href="#bower-사용이-중지되었습니다" aria-label="Permalink to &quot;Bower （사용이 중지되었습니다.）&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">경고</p><p><a href="https://bower.io/blog/2017/how-to-migrate-away-from-bower/" target="_blank" rel="noreferrer">Bower는 사용이 중지되었습니다</a></p><p>현재 Bower 버전의 Handlebars는 여전히 역 호환성을 위해 배포됩니다. 그러나 새 프로젝트를 설정하는 경우 더 이상 사용하지않 아야 합니다.</p></div><h2 id="다른-프로그래밍-언어" tabindex="-1">다른 프로그래밍 언어 <a class="header-anchor" href="#다른-프로그래밍-언어" aria-label="Permalink to &quot;다른 프로그래밍 언어&quot;">​</a></h2><p>다양한 프로그래밍 언어에 대한 Handlebars 구현이 있습니다.</p><ul><li><a href="https://github.com/Handlebars-Net/Handlebars.Net" target="_blank" rel="noreferrer">.Net</a></li><li><a href="https://github.com/jbboehr/handlebars.c" target="_blank" rel="noreferrer">C</a></li><li><a href="https://github.com/aymerick/raymond" target="_blank" rel="noreferrer">Go</a></li><li><a href="https://github.com/jknack/handlebars.java" target="_blank" rel="noreferrer">Java</a></li><li><a href="https://github.com/zordius/lightncandy" target="_blank" rel="noreferrer">PHP (LightnCandy)</a></li><li><a href="https://github.com/wbond/pybars3" target="_blank" rel="noreferrer">Python</a></li><li><a href="https://github.com/cowboyd/handlebars.rb" target="_blank" rel="noreferrer">Ruby</a></li><li><a href="https://github.com/sunng87/handlebars-rust" target="_blank" rel="noreferrer">Rust</a></li></ul>`,31))]))}});export{m as __pageData,F as default};
