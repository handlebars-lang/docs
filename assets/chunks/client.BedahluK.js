function T(r){return new Worker("/assets/worker-DUDJmeIt.js",{name:r==null?void 0:r.name})}const E=(r,e,t={})=>{if(!Number.isFinite(e))throw new TypeError("Expected `wait` to be a finite number");let n,o,s=[],i=[];const m=()=>{var a;clearTimeout(o),o=null;try{(a=t.signal)==null||a.throwIfAborted()}catch(l){for(const c of i)c(l);s=[],i=[]}};return function(...a){return new Promise((l,c)=>{var w;try{(w=t.signal)==null||w.throwIfAborted()}catch(u){c(u);return}const k=t.before&&!o;clearTimeout(o),o=setTimeout(async()=>{var y;o=null;const u=s,p=i;s=[],i=[];try{const f=t.before?n:await r.apply(this,a);for(const h of u)h(f)}catch(f){for(const h of p)h(f)}n=void 0,(y=t.signal)==null||y.removeEventListener("abort",m)},e),k?(async()=>{try{n=await r.apply(this,a),l(n)}catch(u){c(u)}})():(s.push(l),i.push(c),t.signal&&s.length===1&&t.signal.addEventListener("abort",m,{once:!0}))})}};E.promise=r=>{let e;return async function(...t){if(e)return e;try{return e=r.apply(this,t),await e}finally{e=void 0}}};async function b(r,e,t){try{return await Promise.race([r,g(e,()=>new d(`Timed out after ${e}ms`))])}catch(n){throw n instanceof d&&t(),n}}async function g(r,e){return new Promise((t,n)=>setTimeout(()=>n(e()),r))}class d extends Error{constructor(e){super(e)}}class L{constructor(e,t){this.workerFactory=e,this.timeoutMillis=t,this._recreateWorker()}async postMessage(e){return new Promise((t,n)=>{this.worker.addEventListener("message",o=>{o.data.error?n(new Error(o.data.error)):t(o.data)}),b(this.worker.postMessage(e),this.timeoutMillis,()=>this._recreateWorker())})}_recreateWorker(){this.worker!=null&&this.worker.terminate(),this.worker=this.workerFactory()}}function x(r){let e=Promise.resolve();return function(){return e=W(e,()=>r.apply(this,[...arguments])),e}}async function W(r,e){return r.then(e,e)}const A=2e3,I=200,v=new L(()=>new T,A);async function D(r){return v.postMessage(r)}const M=E(x(D),I);async function N(r){return M(r)}export{N as executeExample};
