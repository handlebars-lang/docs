import{_ as t,C as a,c as n,o as p,j as e,a as l,G as s}from"./chunks/framework.218xjblo.js";const P=JSON.parse('{"title":"助手代码","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api-reference/helpers.md","filePath":"zh/api-reference/helpers.md","lastUpdated":1695492225000}'),i={name:"zh/api-reference/helpers.md"};function d(m,o,u,c,f,h){const r=a("Example");return p(),n("div",null,[o[2]||(o[2]=e("h1",{id:"助手代码",tabindex:"-1"},[l("助手代码 "),e("a",{class:"header-anchor",href:"#助手代码","aria-label":'Permalink to "助手代码"'},"​")],-1)),o[3]||(o[3]=e("h2",{id:"options-参数",tabindex:"-1"},[e("code",null,"options"),l(" 参数 "),e("a",{class:"header-anchor",href:"#options-参数","aria-label":'Permalink to "`options` 参数"'},"​")],-1)),o[4]||(o[4]=e("p",null,[l("除了在助手代码调用中运行的参数，"),e("code",null,"options"),l(" 也被作为一个额外的参数传递给助手代码。")],-1)),e("ul",null,[e("li",null,[o[0]||(o[0]=e("p",null,[e("code",null,"lookupProperty(object, propertyName)"),l(": 可以返回对象自身属性的函数。本函数对 "),e("code",null,"allowedProtoProperties"),l(" 与 "),e("code",null,"allowedProtoMethods"),l(" 内的白名单进行参考。例如：")],-1)),s(r,{examplePage:"/zh/examples/helper-lookup-property.md",show:"preparationScript"})]),o[1]||(o[1]=e("li",null,[e("p",null,"TODO：对所有传递给助手代码的选项进行解释。")],-1))])])}const k=t(i,[["render",d]]);export{P as __pageData,k as default};
