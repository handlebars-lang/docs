import{_ as s,c as i,o as e,aj as t}from"./chunks/framework.218xjblo.js";const c=JSON.parse('{"title":"Handlebars 런타임","description":"","frontmatter":{},"headers":[],"relativePath":"ko/api-reference/runtime.md","filePath":"ko/api-reference/runtime.md","lastUpdated":1695492225000}'),n={name:"ko/api-reference/runtime.md"};function l(r,a,h,p,d,k){return e(),i("div",null,[...a[0]||(a[0]=[t('<h1 id="handlebars-런타임" tabindex="-1">Handlebars 런타임 <a class="header-anchor" href="#handlebars-런타임" aria-label="Permalink to &quot;Handlebars 런타임&quot;">​</a></h1><h2 id="handlebars-registerpartial-name-partial" tabindex="-1"><code>Handlebars.registerPartial(name, partial)</code> <a class="header-anchor" href="#handlebars-registerpartial-name-partial" aria-label="Permalink to &quot;`Handlebars.registerPartial(name, partial)`&quot;">​</a></h2><p>환경 내 모든 템플릿에서 접근할 수 있는 부분 템플릿을 등록합니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerPartial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, partial);</span></span></code></pre></div><p>여러 부분 템플릿을 한 번에 등록하는 것도 지원합니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerPartial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ foo: partial, bar: partial });</span></span></code></pre></div><p>전체 라이브러리를 로드하는 경우, 부분 템플릿은 필요할 때 컴파일되는 문자열 값일 수 있습니다. 런타임만 로드하는 경우, 부 분 템플릿은 <code>Handlebars.template</code> 메서드를 사용하여 적절히 설정된 사전 컴파일된 템플릿이어야 합니다.</p><h2 id="handlebars-unregisterpartial-name" tabindex="-1"><code>Handlebars.unregisterPartial(name)</code> <a class="header-anchor" href="#handlebars-unregisterpartial-name" aria-label="Permalink to &quot;`Handlebars.unregisterPartial(name)`&quot;">​</a></h2><p>이전에 등록된 부분 템플릿을 등록 해제합니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregisterPartial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="handlebars-registerhelper-name-helper" tabindex="-1"><code>Handlebars.registerHelper(name, helper)</code> <a class="header-anchor" href="#handlebars-registerhelper-name-helper" aria-label="Permalink to &quot;`Handlebars.registerHelper(name, helper)`&quot;">​</a></h2><p>환경 내 모든 템플릿에서 접근할 수 있는 헬퍼를 등록합니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerHelper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {});</span></span></code></pre></div><p>여러 헬퍼를 한 번에 등록하는 것도 지원합니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerHelper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {}, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {} });</span></span></code></pre></div><h2 id="handlebars-unregisterhelper-name" tabindex="-1"><code>Handlebars.unregisterHelper(name)</code> <a class="header-anchor" href="#handlebars-unregisterhelper-name" aria-label="Permalink to &quot;`Handlebars.unregisterHelper(name)`&quot;">​</a></h2><p>이전에 등록된 헬퍼를 등록 해제합니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregisterHelper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="handlebars-registerdecorator-name-helper-폐기-예정" tabindex="-1"><code>Handlebars.registerDecorator(name, helper)</code> (폐기 예정) <a class="header-anchor" href="#handlebars-registerdecorator-name-helper-폐기-예정" aria-label="Permalink to &quot;`Handlebars.registerDecorator(name, helper)` (폐기 예정)&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">폐기 예정 안내</p><p>사용자 정의 데코레이터는 폐기 예정이며 Handlebars의 다음 주요 버전에서 사라질 수 있습니다. 이들은 다른 언어로 포팅하기어 려운 내부 API의 너무 많은 부분을 노출하며 코드 유지 관리가 어렵게 만듭니다.</p></div><p>환경 내 모든 템플릿에서 접근할 수 있는 데코레이터를 등록합니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerDecorator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {});</span></span></code></pre></div><p>여러 데코레이터를 한 번에 등록하는 것도 지원합니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerDecorator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {}, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {} });</span></span></code></pre></div><h2 id="handlebars-unregisterdecorator-name" tabindex="-1"><code>Handlebars.unregisterDecorator(name)</code> <a class="header-anchor" href="#handlebars-unregisterdecorator-name" aria-label="Permalink to &quot;`Handlebars.unregisterDecorator(name)`&quot;">​</a></h2><p>이전에 등록된 데코레이터를 등록 해제합니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregisterDecorator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="handlebars-create" tabindex="-1"><code>Handlebars.create()</code> <a class="header-anchor" href="#handlebars-create" aria-label="Permalink to &quot;`Handlebars.create()`&quot;">​</a></h2><p>고립된 Handlebars 환경을 만듭니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OtherHandlebars </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>각 환경은 자체 헬퍼와 부분 템플릿을 가집니다. 이는 별개의 헬퍼 또는 부분 템플릿이 필요한 사용 사례에서만 필요합니다. 대 부분의 사용 사례는 루트 <code>Handlebars</code> 환경을 직접 사용할 수 있습니다.</p><p>주어진 환경을 위해 생성된 템플릿은 해당 환경에 바인딩됩니다. 이는 여러 환경에서 실행되어야 하는 템플릿이 각 환경에 대해 다시 컴파일되거나 <code>Handlebars.template</code>을 통해 재구성되어야 함을 의미합니다. 이는 부분 템플릿에도 적용됩니다.</p><h2 id="handlebars-noconflict" tabindex="-1"><code>Handlebars.noConflict()</code> <a class="header-anchor" href="#handlebars-noconflict" aria-label="Permalink to &quot;`Handlebars.noConflict()`&quot;">​</a></h2><p>이 Handlebars 인스턴스를 전역 네임스페이스에서 제거하고 전역 <code>Handlebars</code> 변수를 이전 값으로 복원합니다.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myHandlebars </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Handlebars.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">noConflict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>이를 통해 라이브러리의 다양한 버전을 동시에 사용하면서 버전 충돌에 대한 걱정 없이 사용할 수 있습니다.</p>',36)])])}const g=s(n,[["render",l]]);export{c as __pageData,g as default};
